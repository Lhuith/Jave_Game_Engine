package com.base.engine;

public class Game 
{
	private Mesh mesh;
	private Shader shader;
	private Material material;
	private Transform transform;
	private Camera camera;
	
	public Game()
	{
		mesh = new Mesh(); //ResourcesLoad.loadMesh("cube.obj");
		
		shader = new BasicShader();
		camera = new Camera();
		material = new Material(ResourceLoader.LoadTexture("test.png"), new Vector3f(0.0f, 1.0f, 1.0f) );

		Vertex[] vertices = new Vertex[]
				{
						new Vertex(new Vector3f(-1, -1, 0), new Vector2f(0,0)),
						new Vertex(new Vector3f(0, 1, 0), new Vector2f(0.5f,0)),
						new Vertex(new Vector3f(1, -1, 0), new Vector2f(1.0f,0)),
						new Vertex(new Vector3f(0, -1, 1), new Vector2f(0,0.5f)),
				};
		int[] indices = new int[] {3, 1, 0,
								   2, 1, 3,
								   0, 1, 2,
								   0, 2, 3
		};
		
		mesh.AddVertices(vertices, indices);
		
		Transform.setProjection(70f, Window.getWidth(), Window.GetHeight(), 0.1f, 1000);
		Transform.setCamera(camera);
		transform = new Transform();
	
	}
	
	
	public void Input()
	{
		camera.input();
	}
	
	float temp = 0.0f;
	
	public void Update()
	{
		temp += Time.getDelta();
		
		float sinTemp = (float)Math.sin(temp);
		
		transform.setTranslation(sinTemp, 0, 5);
		transform.setRotation(0, sinTemp * 180, 0);
	}
	
	
	public void Render()
	{
		RenderUtil.setClearColor(Transform.getCamera().getPos().div(2048f).abs());
		shader.bind();
		shader.updateUniforms(transform.getTransformation(), transform.getProjectedTransformation());
		texture.bind();
		mesh.draw();
	}
}
