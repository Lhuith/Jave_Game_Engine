package com.base.engine.rendering;

import com.base.engine.core.Matrix4f;
import com.base.engine.core.Transform;

public class ForwardDirectional extends Shader
{
	
	private static final ForwardDirectional instance = new ForwardDirectional();
	
	public static ForwardDirectional getInstance(){return instance;}
	
	public ForwardDirectional()
	{
		super();
		
		AddVertexShaderFromFile("foward-directional.vs.glsl");	
		AddFragmentShaderFromFile("foward-directional.fs.glsl");
		
		setAttribLocation("position", 0);
		setAttribLocation("texCoord", 1);
		setAttribLocation("normal", 2);
		
		compileShader();
		
		AddUniform("model");
		AddUniform("MVP");
	}
	
	
	public void updateUniforms(Transform transform,  Material material)
	{
		Matrix4f worldMatrix = transform.getTransformation();
		Matrix4f projectedMatrix = getRenderingEngine().getMainCamera().getViewProjection().mul(worldMatrix);
		
		
		if(material.getTexture() != null)
			material.getTexture().bind();

		
		setUniform("transformProjected", projectedMatrix);
		setUniform("transform", worldMatrix);
		
	}
}
