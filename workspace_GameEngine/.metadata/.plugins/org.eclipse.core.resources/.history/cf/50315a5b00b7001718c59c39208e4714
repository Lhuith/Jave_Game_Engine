package com.base.engine.rendering;

import com.base.engine.components.SpotLight;
import com.base.engine.core.Matrix4f;
import com.base.engine.core.Transform;

public class ForwardSpot extends Shader
{
	
	private static final ForwardSpot instance = new ForwardSpot();
	
	public static ForwardSpot getInstance(){return instance;}
	
	public ForwardSpot()
	{
		super("forward-spot");
	}
	
	
	public void updateUniforms(Transform transform,  Material material, RenderingEngine renderingEngine)
	{
		Matrix4f worldMatrix = transform.getTransformation();
		Matrix4f projectedMatrix = renderingEngine.getMainCamera().getViewProjection().mul(worldMatrix);
		material.getTexture("diffuse").bind();;
		
		setUniform("model", worldMatrix);	
		setUniform("MVP", projectedMatrix);
		
		
		setUniformf("specularIntensity", material.getFloat("specularIntensity"));
		setUniformf("specularPower", material.getFloat("specularPower"));
		
		setUniform("C_eyePos", renderingEngine.getMainCamera().getTransform().getTransformedPos());
		
		setUniformSpotLight("spotLight", (SpotLight)renderingEngine.getActivelight());
	}
	
}
