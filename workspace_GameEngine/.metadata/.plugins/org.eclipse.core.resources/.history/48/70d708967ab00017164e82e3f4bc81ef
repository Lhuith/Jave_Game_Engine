package com.base.engine;

public class Player 
{
	private Camera camera;
	
	private boolean mouseLocked = false;
	private Vector2f centrePosition = new Vector2f(Window.getWidth()/2, Window.GetHeight()/2);
	private Vector3f movementVector;
	
	public Player(Vector3f position)
	{
		camera = new Camera(position, new Vector3f(0,0,1), new Vector3f(0,1,0));
	}
	
	public void input()
	{
		float sensitivity = 0.25f;
		float moveAmt = (float)(2.5 * Time.getDelta());
		//float rotAmt = (float)(100* Time.getDelta());
		
		if(Input.GetKey(Input.KEY_ESCAPE))
		{
			Input.SetCursor(true);
			mouseLocked = false;
		}
		if(Input.GetMouseDown(1))
		{
			Input.SetMousePosition(centrePosition);
			Input.SetCursor(false);
			mouseLocked = true;
		}
		
		if(Input.GetMouseUp(1))
		{
			Input.SetMousePosition(centrePosition);
			Input.SetCursor(true);
			mouseLocked = false;
		}
		
		movementVector = new Vector3f(0,0,0);
		
		if(Input.GetKey(Input.KEY_W))
			movementVector = movementVector.add(camera.getForward())//camera.move(camera.getForward(), moveAmt);
		if(Input.GetKey(Input.KEY_S))
			//camera.move(camera.getForward(), -moveAmt);
		if(Input.GetKey(Input.KEY_A))
			//camera.move(camera.getLeft(), moveAmt);
		if(Input.GetKey(Input.KEY_D))
			//camera.move(camera.getRight(), moveAmt);
			
		
		if(mouseLocked)
		{
			Vector2f deltaPos = Input.GetMousePosition().sub(centrePosition);
			
			boolean rotY = deltaPos.getX() != 0;
			boolean rotX = deltaPos.getY() != 0;
			
			if(rotY)
				camera.rotateY(deltaPos.getX() * sensitivity);
			if(rotX)
				camera.rotateX(-deltaPos.getY() * sensitivity);
			
			
			if(rotY || rotX)
				Input.SetMousePosition(new Vector2f(Window.getWidth()/2, Window.GetHeight()/2));
		}
	}
	
	public void update()
	{
		
	}
	
	public void render()
	{
		
	}

	public Camera getCamera() {
		return camera;
	}

}
